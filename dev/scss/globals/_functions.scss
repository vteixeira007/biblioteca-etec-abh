//FUNCTIONS
@function pxToRem($px){
  $remUnit: 0.0625;
  $rem: $px * $remUnit * 1rem;
  @return $rem;
}

@function pxToVw($px,$viewportWidth: 1440){
  @return calc(100vw / $viewportWidth * $px);
}

@function sqrt($r) {
  $x0: 1;
  $x1: $x0;

  @for $i from 1 through 10 {
      $x1: $x0 - calc( ($x0 * $x0 - abs($r)) / (2 * $x0) );
      $x0: $x1;
  }

  @return $x1;
}

@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
      $n: $number * 0 + 1;
      @return calc($number / $n);
  }

  @return $number;
}

@function str-split($string, $separator) {
  // empty array/list
  $split-arr: ();
  // first index of separator in string
  $index : str-index($string, $separator);
  // loop through string
  @while $index != null {
      // get the substring from the first character to the separator
      $item: str-slice($string, 1, $index - 1);
      // push item to array
      $split-arr: append($split-arr, $item);
      // remove item and separator from string
      $string: str-slice($string, $index + 1);
      // find new index of separator
      $index : str-index($string, $separator);
  }
  // add the remaining string to list (the last item)
  $split-arr: append($split-arr, $string);

  @return $split-arr;
}

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  
  @return $string;
}
